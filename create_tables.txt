CREATE TABLE People (
peopleID varchar (255) primary key,
given_name varchar (255),
last_name varchar (255),
birthdate date,
birth_country varchar (255),
weight float,
height float,
bats varchar (255),
throws varchar (255),
debut date,
final_game date
);


copy People FROM '/home/cc3201/cc3201/DatosOrdenados/People/People.csv' DELIMITER ',' CSV HEADER;


-- IDEA 1 :
-- Team( teamID,  name , season_debut, franchise_name )
-- Season( year, league,  division,  division_winner) 
-- PostSeason( year, league,  league_champion, ws_champion) 
-- TeamSeason( year,  team,   league, division, g ,   g_home,  wins, loses,  division_rank, park, attendance ,  BPF,  PPF ) 


CREATE TABLE Teams(
teamid varchar (255) primary key,
team_name varchar (255),
season_debut varchar(255),
franchise_name varchar(255) 
);

copy Teams FROM '/home/cc3201/cc3201/DatosOrdenados/Teams/Teams.csv' DELIMITER ',' CSV HEADER;


CREATE TABLE Team_Season(

year int,
teamid varchar(255) references Teams(teamid) ,
league varchar(255),
division varchar(255), 
games int, 
games_at_home int,
wins int,
loses int, 
div_rank int, 
park varchar(255), 
attendance int, 
BPF int, 
PP int, 
primary key (year, teamid)
);

CREATE TABLE Season(
year int,
league varchar(255),
division varchar(255), 
division_winner varchar (255),
primary key(year, league, division),
foreign key(year, division_winner) references Team_Season(year, teamid)
);


CREATE TABLE postSeason(
year int,
league varchar(255),
league_winner varchar (255),
ws_winner varchar(255), 
primary key(year, league),
foreign key(year, league_winner) references Team_Season(year, teamid)
);



CREATE TABLE PlayerAppearances (
year int,
teamID varchar (255),
playerID varchar (255),
--lgID varchar (255),
G_all int,
GS int,
G_batting int,
G_defense int,
G_p int,
G_c int,
G_1b int,
G_2b int,
G_3b int,
G_ss int,
G_lf int,
G_cf int,
G_rf int,
G_of int,
G_dh int,
G_ph int,
G_pr int,
primary key (year, teamID, playerID),
foreign key (teamID, year) references Team_Season(teamID, year),
foreign key (playerID) references People(peopleID)
);

copy PlayerAppearances FROM '/home/cc3201/cc3201/DatosOrdenados/Jugador/Appearances.csv' DELIMITER ',' CSV HEADER;


CREATE TABLE Batting (
playerID varchar (255),
year int,
stint int,
teamID varchar (255),
-- lgID varchar (255),
G int,
AB int,
R int,
H int,
"2B" int,
"3B" int,
HR int,
RBI int,
SB int,
CS int,
BB int,
SO int,
IBB int,
HBP int,
SH int,
SF int,
GIDP int,
primary key ( playerID, year, teamID, stint),
foreign key (teamID, year) references Team_Season(teamID, year),
foreign key (playerID) references People(peopleID)
);
copy batting FROM '/home/cc3201/cc3201/DatosOrdenados/Jugador/Batting.csv' DELIMITER ',' CSV HEADER;


CREATE TABLE Fielding (
playerID varchar (255),
year int,
stint int,
teamID varchar (255),
-- lgID varchar (255),
POS varchar (255),
G int,
GS int,
InnOuts int,
PO int,
A int,
E int,
DP int,
PB int,
WP int,
SB int,
CS int,
ZR int,
primary key (playerID, year, teamID , stint, pos),
foreign key (teamID, year) references Team_Season(teamID, year),
foreign key (playerID) references People(peopleID)
);

copy fielding FROM '/home/cc3201/cc3201/DatosOrdenados/Jugador/Fielding.csv' DELIMITER ',' CSV HEADER;

CREATE TABLE Pitching (
playerID varchar (255),
year int,
stint int,
teamID varchar (255),
-- lgID varchar (255),
W int,
L int,
G int,
GS int,
CG int,
SHO int,
SV int,
IPouts int,
H int,
ER int,
HR int,
BB int,
SO int,
BAOpp float,
ERA float,
IBB int,
WP int,
HBP int,
BK int,
BFP int,
GF int,
R int,
SH int,
SF int,
GIDP int,
primary key (year, teamID, playerID),
foreign key (teamID, year) references Team_Season(teamID, year),
foreign key (playerID) references People(peopleID)
);

copy pitching FROM '/home/cc3201/cc3201/DatosOrdenados/Jugador/Pitching.csv' DELIMITER ',' CSV HEADER;

CREATE TABLE Managers (
playerID varchar (255),
year int,
teamID varchar (255),
-- lgID varchar (255),
inseason int,
G int,
W int,
L int,
rank int,
plyrMgr varchar (255),
primary key (year, teamID, playerID),
foreign key (teamID, year) references Team_Season(teamID, year),
foreign key (playerID) references People(peopleID)
);
copy pitching FROM '/home/cc3201/cc3201/DatosOrdenados/Manager/Managers.csv' DELIMITER ',' CSV HEADER;



CREATE TABLE Awards(
	personID varchar (255),
	awardID varchar (255),
	year int,
	league varchar (255),
	tie varchar (255),
	notes varchar (255),
	category varchar(255),
	primary key (awardID, year, league, personID),
	foreign key (personID) references People(peopleID)
);



-- CREATE TABLE AwardsManagerVotes (
-- awardID varchar (255), 
-- year int,
-- league varchar (255),
-- playerID varchar (255),
-- pointsWon int,
-- pointsMax int,
-- votesFirst int,
-- primary key (awardID, year, league, playerID),
-- foreign key (playerID) references People(peopleID)

-- );

-- CREATE TABLE AwardsManager (
-- playerID varchar (255),
-- awardID varchar (255),
-- year int,
-- league varchar (255),
-- tie varchar (255),
-- notes varchar (255),
-- primary key (awardID, year, league, playerID),
-- foreign key (playerID) references People(peopleID)

-- );

-- CREATE TABLE AwardsPlayerVotes (
-- awardID varchar (255),
-- year int,
-- league varchar (255),
-- playerID varchar (255),
-- pointsWon int,
-- pointsMax int,
-- votesFirst int,
-- primary key (awardID, year, league, playerID),
-- foreign key (playerID) references People(peopleID)

-- );

-- CREATE TABLE AwardsPlayer (
-- playerID varchar (255),
-- awardID varchar (255),
-- year int,
-- league varchar (255),
-- tie varchar (255),
-- notes varchar (255),
-- primary key (awardID, year, league, playerID),
-- foreign key (playerID) references People(peopleID)
-- );

CREATE TABLE Salaries (
year int,
teamID varchar (255),
league varchar (255),
playerID varchar (255),
salary int,
primary key(playerID, year, teamID),
foreign key (teamID, year) references Team_Season(teamID, year),
foreign key (playerID) references People(peopleID)

);

CREATE TABLE HallOfFame (
playerID varchar(255),
year int,
votedBy varchar(255),
ballots int,
needed int,
votes int,
inducted varchar(255),
category varchar(255),
needed_note varchar(255),
primary key (year, playerID, category, inducted),
foreign key (playerID) references People(peopleID)


);


-- CREATE TABLE AllStarPlayer (
-- playerID varchar(255),
-- season int,
-- gameNum int,
-- teamID varchar(255),
-- lgID varchar(255),
-- GP int,
-- startingPos int,
-- 
-- primary key (playerID, season),
-- foreign key (playerID) references People(peopleID)
-- );
-- 
-- CREATE TABLE AllStarGame (
-- season int, 
-- date date,
-- scoreNL int, 
-- scoreAL int,
-- MPV varchar(255),
-- park varchar(255),
-- city varchar(255),
-- attendance int,
-- primary key (season),
-- foreign key (MVP) references People(peopleID)
-- );


#########
## NOTAS de implementación

## Player Apparecences <- thompan01 not in player  - 53 sb as float

## Batting Se añade stint a llave primaria por linea 217

## Pitching : - hbp 468 float
			  #-Se agrega stint a llave primaria por 342 


## Fielding: - Se agrega pos a llave primaria por 4




-- CREATE TABLE Team (
-- year int,
-- lgID varchar (255),
-- divID varchar (255),
-- teamID varchar (255),
-- name varchar (255),
-- franchID varchar (255),
-- Rank int,
-- G int,
-- GHome int,
-- W int,
-- L int,
-- DivWin varchar (255),
-- WCWin varchar (255),
-- LgWin varchar (255),
-- WSWin varchar (255),
-- R int,
-- AB int,
-- H int,
-- "2B" int,
-- "3B" int,
-- HR int,
-- BB int,
-- SO int,
-- SB int,
-- CS int,
-- HBP int,
-- SF int,
-- RA int,
-- ER int,
-- ERA float,
-- CG int,
-- SHO int,
-- SV int,
-- IPOuts int,
-- HA int,
-- HRA int,
-- BBA int,
-- SOA int,
-- E int,
-- DP int,
-- FP float,
-- park varchar (255),
-- attendance int,
-- BPF int,
-- PPF int,
-- primary key (yearID, teamID)
-- );

-- copy teans FROM '/home/cc3201/cc3201/DatosOrdenados/Teams/Teams.csv' DELIMITER ',' CSV HEADER;


-- CREATE TABLE Parks (
-- key varchar (255),
-- name varchar (255),
-- alias varchar (255),
-- city varchar (255),
-- state varchar (255),
-- country varchar (255)
-- -- primary key (key)

-- );

-- CREATE TABLE team_franchises (
-- franchID varchar (255) primary key,
-- franchName varchar (255),
-- active varchar (255),
-- NAassoc varchar (255)
-- -- primary key (franchID)
-- );


